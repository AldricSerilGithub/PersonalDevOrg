<apex:page controller="simt_ConfigureInstanceCheckController" sidebar="false" showHeader="false" title="myOps Session Login Page">
<c:simt_LoadingBox />
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">    
    <meta name="viewport" content="width=device-width, initial-scaling=1"/>
    <head>
        <title>myOps Login Page</title>
        <apex:stylesheet value="{!URLFOR($Resource.SLDS0102, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
        <style>
        body{
            /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#0081b3+0,0081b3+100 */
            background: #0081b3; /* Old browsers */
            background: -moz-linear-gradient(top,  #0081b3 0%, #0081b3 100%); /* FF3.6-15 */
            background: -webkit-linear-gradient(top,  #0081b3 0%,#0081b3 100%); /* Chrome10-25,Safari5.1-6 */
            background: linear-gradient(to bottom,  #0081b3 0%,#0081b3 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#0081b3', endColorstr='#0081b3',GradientType=0 ); /* IE6-9 */

            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
        }
        .slds-picklist .selected, .slds-picklist .selected-eadd{
           background: #BCBCBC;
        }
        .slds{
            background-color:#FFFFFF !important;
            border-radius:5px;
            margin: 10px auto;
            padding: 10px;
            width: 70%;
            min-height: 800px;
        }
        .slds input[type="submit"]{
            letter-spacing:.0625em;
        }
        .title-container{    
            position: relative;
            height: 79px;
            width: 70%;
            margin: 0 auto;
            text-align: center;
        }
        .title{
            text-align:center;
        }
        .slds-form--stacked, .slds-form-element{
            margin: 20px auto;
            width: 90%;
        }
        .slds .slds-form-element__label{
            letter-spacing: .0625em;
        }
        .slds-first-col, .slds-third-col{
            width:45% !important;
        }
        .slds-second-col{
            width:10%;
            margin: 15% 0;
        }
        .slds-first-col ul, .slds-third-col ul{
            width:100% !important;
        }
        .slds-second-col .slds-button{
            margin-left: auto !important;
            margin-right: auto !important;
        }
        .slds-command-button{
            text-align:center;
        }
        .slds-command-button input[type="submit"]{
            margin-top: 20px !important;
        }
        .title{
            font-size: 14px;
            line-height: 1.25;
            text-transform: uppercase;
            letter-spacing: .0625em;
            color: #FFFFFF;
        }
        .salesforce-logo{
            height: 60px;
            padding-bottom: 5px;
        }
        .salesforce-logo img{
            height: 60px;
        }
        
        
        
        .overlay {
            display: none;
            height: 100%;
            left: 0;
            position: fixed;
            top: 0;
            opacity: 0.3;
            -moz-opacity: 0.3;
            width: 100%;
            -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
            filter: alpha(opacity=30);
            background: #000;
            -khtml-opacity: 0.3;
            z-index: 1000;
        }
        .loader {
            background: url('http://www.arabianbusiness.com/skins/ab.main/gfx/loading_spinner.gif') scroll no-repeat 0 0;
            width: 32px;
            height: 32px;
            position: absolute;
            left: 50%;
        }
        </style>
    </head>  
    <div id="load_scrl" class="loadingBox loader" style="display:none"> </div>
    <div class="loadingBox overlay"> </div>
    <div class="title-container">
        <div class="salesforce-logo">
        <img src="https://upload.wikimedia.org/wikipedia/en/3/34/SFDC_logo.png" />
        </div>
        <div class="title">
            Salesforce.com Instance Monitoring Tool
        </div>
    </div>
    <div class="slds"> 
        <apex:form styleclass="slds-form--stacked" >
        <apex:pageMessages id="pageMessage" />
            <apex:inputHidden value="{!emailAddToBeRemoved}" id="eAddToBeRemoved"/>
            <apex:inputHidden value="{!emailAdd}" id="emailAdd"/>
        <!-- / MASTHEAD -->  
        <div class="slds-form--stacked">
          <div class="slds-form-element">
            <label class="slds-form-element__label" for="addEmailText">Add Email Recipient</label>
            <div class="slds-form-element__control">
              <input id="addEmailText" class="slds-input startElement" type="email" placeholder="sample@sample.com" style="width:70%;" />
              <apex:commandButton styleClass="slds-button slds-button--brand startElement"  action="{!addEmail}" value="Add" style="margin-left:5px;width:100px;"/>
            </div>
          </div>
          <div class="slds-form-element">
            <div class="slds-form-element__label slds-m-bottom--x-small">
              <label class="slds-align-middle" for="form-help">Email Recipient/s</label>
              <button onclick="return false;" class="slds-button slds-button--icon-bare slds-m-right--xx-small">
                <svg aria-hidden="true" class="slds-button__icon">
                  <use xlink:href="{!URLFOR($Resource.SLDS0102, '/assets/icons/utility-sprite/svg/symbols.svg#info')}"></use>
                </svg>
                <span class="slds-assistive-text">Help</span>
              </button>
            </div>
        <div>
            <div class="slds-form-element__control " style="width:100%;float:left;">
                <div class="slds-picklist slds-picklist--multi" style="width:70%;float:left;">
                  <ul class="ul-eadd slds-picklist__options slds-picklist__options--multi shown startElement" style="width:100%;" >
                    <apex:repeat value="{!selectedEmailAddresses}" var="eadd">
                    <li draggable="true" id="po-0-0" class="slds-picklist__item" aria-selected="false" tabindex="0" role="option">
                      <span class="slds-truncate">
                        <span>{!eadd}</span>
                      </span>
                    </li>
                    </apex:repeat>
                  </ul>
                </div>
                <div style="float:left;">
                    <apex:commandButton styleClass="slds-button slds-button--brand startElement" action="{!removeEmail}" onclick="return checkIfSelected();" value="Remove" style="margin-left:5px;width:100px;"/>                  
                    <script>
                        
                    </script>
                </div>
            </div>
          </div>
      </div>
          <div class="slds-picklist--draggable slds-grid" style="float:left;width:100%;">
          <div class="slds-form-element slds-first-col">
            <span class="slds-form-element__label" aria-label="select-1">Available Instances</span>
            <div class="slds-picklist slds-picklist--multi" >
              <ul id="available-instances" class="ul-instance slds-picklist__options slds-picklist__options--multi shown startElement" ondrop="drop(event,0)" ondragover="allowDrop(event)">
                <apex:repeat value="{!instanceList}" var="instanceName">
                <li draggable="true" id="{!instanceName}" class="slds-picklist__item" aria-selected="false" tabindex="0" role="option" ondragstart="dragStart(event,0)" >
                  <span class="slds-truncate">
                    <span>{!instanceName}</span>
                  </span>
                </li>
                </apex:repeat>
              </ul>
            </div>
          </div>
          <div class="slds-grid slds-grid--vertical slds-second-col">
            <button disabled="{!if(isStarted,true,false)}"  class="slds-button slds-button--icon-container selected-instances-btn" onclick="addAllInstance();return false;">
              <svg aria-hidden="true" class="slds-button__icon">
                <use xlink:href="{!URLFOR($Resource.SLDS0102, '/assets/icons/utility-sprite/svg/symbols.svg#left')}"></use>
              </svg>
              <span class="slds-assistive-text">Arrow left</span>
            </button>
            <button disabled="{!if(isStarted,true,false)}" class="slds-button slds-button--icon-container available-instances-btn" onclick="addAllInstance();return false;">
              <svg aria-hidden="true" class="slds-button__icon">
                <use xlink:href="{!URLFOR($Resource.SLDS0102, '/assets/icons/utility-sprite/svg/symbols.svg#right')}"></use>
              </svg>
              <span class="slds-assistive-text">Arrow right</span>
            </button>
          </div>
          <div class="slds-form-element slds-third-col">
            <span class="slds-form-element__label" aria-label="select-2">Selected Instances</span>
            <div class="slds-picklist slds-picklist--multi">
              <ul id="selected-instances" class="ul-instance slds-picklist__options slds-picklist__options--multi shown startElement" ondrop="drop(event,1)" ondragover="allowDrop(event)">
                  <apex:repeat value="{!instanceList2}" var="instanceName">
                    <li draggable="true" id="{!instanceName}" class="slds-picklist__item" aria-selected="false" tabindex="0" role="option" ondragstart="dragStart(event,1)">
                      <span class="slds-truncate">
                        <span>{!instanceName}</span>
                      </span>
                    </li>
                  </apex:repeat>
              </ul>
            </div>
          </div>
        </div>
        <div class="slds-command-button">
            <apex:commandButton rendered="{!NOT(isStarted)}" styleClass="slds-button slds-button--brand"  action="{!runInstanceChecker}" value="Start" />
            <apex:commandButton rendered="{!isStarted}" styleClass="slds-button slds-button--brand" action="{!stopInstanceChecker}" value="Stop" />
            <apex:commandButton styleClass="slds-button slds-button--brand startElement" action="{!saveInfo}" value="Save"/>
        </div>
        </div>
        <br/>
        <!-- Mel -->
        <apex:actionRegion >
            <!--<apex:inputHidden value="{!instanceValue}" id="instanceValue"/>-->
            <apex:actionFunction action="{!addInstance}" name="addInstance" reRender="selected-instances" oncomplete="hideLoading();" >
                    <apex:param name="inst" assignTo="{!instanceValue}" value="" />
            </apex:actionFunction>
            <apex:actionFunction action="{!removeInstance}" name="removeInstance" reRender="available-instances" oncomplete="hideLoading();" >
                    <apex:param name="inst" assignTo="{!instanceValue}" value="" />
            </apex:actionFunction>
        </apex:actionRegion>
        <!-- Mel -->
        </apex:form>
    </div>
    <apex:includeScript value="{!URLFOR($Resource.bootstrap, 'bootstrap/js/jquery-1.10.2.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.bootstrap, 'bootstrap/js/bootstrap.min.js')}"/>
    <script>

        $(document).ready(function(){
            var isStarted = {!isStarted};
            if(isStarted==true){
                $('.startElement').attr('disabled','true');
                $('ul.startElement li').css('pointer-events','none');
            }else{
                $('.startElement').removeAttr('disabled');
            } 
        });
        $(document).delegate("#addEmailText", "keyup", function(){
            var emailAdd = $(this).val();
            $("input[id*='emailAdd']").val(emailAdd);
        });
        $(document).delegate("#addEmailText", "change", function(){
            var emailAdd = $(this).val();
            $("input[id*='emailAdd']").val(emailAdd);
        });
        var emailAddToBeRemoved;
        $(document).delegate(".slds-picklist__item", "click", function(){
            emailAddToBeRemoved = $(this).text().trim();
            $("input[id*='eAddToBeRemoved']").val(emailAddToBeRemoved);
        });
        function checkIfSelected(){
            var hasSelected = true;
            if(emailAddToBeRemoved==''||emailAddToBeRemoved==null){
                alert('Please select Email Add to be removed.');
                hasSelected = false;
            }
            return hasSelected;
        }
        var start;
        var end;
        //Start Mel 11-10-15 Drag and Drop functionality
        function dragStart(event, inst) {
            event.dataTransfer.setData("Text", event.target.id);
            $('.selected').removeClass('selected');
            $(".selected-instances-btn").attr('disabled','disabled');
            $(".available-instances-btn").attr('disabled','disabled');
            start = inst;
        }

        function allowDrop(event) {
            event.preventDefault();
        }
        function drop(event, inst) {
            event.preventDefault();
            var data = event.dataTransfer.getData("Text");
            var instanceHolder;
            console.log(data);
            end = inst;
            
            if(start != end){
                showLoading();
                if(event.target.tagName == 'UL'){
                    event.target.appendChild(document.getElementById(data));
                    instanceHolder = event.target.getAttribute('id');
                }
                else if(event.target.tagName == 'LI'){
                    var liEl = event.target.parentElement; //UL
                    liEl.appendChild(document.getElementById(data)); 
                    instanceHolder = liEl.getAttribute('id');
                }
                else if(event.target.tagName == 'SPAN'){
                    var spanEl = event.target.parentElement; //SPAN
                    if(spanEl.tagName == 'SPAN'){
                        var spanEl2 = spanEl.parentElement; // LI
                        if(spanEl2.tagName == 'LI'){
                            spanEl2.parentElement.appendChild(document.getElementById(data));
                            instanceHolder = spanEl2.parentElement.getAttribute('id');
                        }
                    }
                    else{
                        if(spanEl.tagName == 'LI'){
                            spanEl.parentElement.appendChild(document.getElementById(data));
                            instanceHolder = spanEl.parentElement.getAttribute('id');
                        }
                    }
                }  
               // $("input[id*='instanceValue']").val(data);
                if(instanceHolder == 'selected-instances'){
                    $('#'+data).attr('ondragstart','dragStart(event,'+end+')');
                    addInstance(data);
                }
                else if(instanceHolder == 'available-instances'){
                    $('#'+data).attr('ondragstart','dragStart(event,'+start+')');
                    removeInstance(data);
                }
                sort();
            }           
        }
        
        function showLoading(){
            $('#load_scrl').css('top', $(document).scrollTop() + 200);
            $('.loadingBox').show();
        }
        function hideLoading(){
            $('.loadingBox').hide();
        }
        
        //Sort
        
        function sort(){
        
            $('#available-instances ul, #available-instances').each(function(_, ul) {

              // get all the nodes to be sorted
              var $toSort = $(ul).children('li').children('span').children('span');
              var $toSortId = $(ul).children('li').attr('id');
              
              // extract the text
              var values = $toSort.get().map(function(span) {
                return span.textContent;
              });
              
              var valuesId = $toSort.get().map(function(span) {
                return $('#'+span.textContent).attr('id');
              });
              
              values.sort();
              
              // shove reordered texts back into the original elements
              values.forEach(function(value, index) {
                $toSort[index].textContent = value;
                $toSort[index].parentElement.parentElement.setAttribute('id',value);
              });
            });
            
            $('#selected-instances ul, #selected-instances').each(function(_, ul) {

              var $toSort = $(ul).children('li').children('span').children('span');
              var $toSortId = $(ul).children('li').attr('id');
            
              var values = $toSort.get().map(function(span) {
                return span.textContent;
              });
              
              var valuesId = $toSort.get().map(function(span) {
                return $('#'+span.textContent).attr('id');
              });
              
              values.sort();
              
              values.forEach(function(value, index) {
                $toSort[index].textContent = value;
                $toSort[index].parentElement.parentElement.setAttribute('id',value);
              });
            });
        }
        //Sort End
        
        //
        var lis = $('.slds-picklist .ul-eadd li').click(function(e){
            $('.slds-picklist .ul-eadd li').removeClass('selected-eadd');
            $(this).addClass("selected-eadd");
        });
        
        
        
        
        // multi select
        var ul;
        var parentElementId;
        var elements;
        
        var lis = $('.slds-picklist .ul-instance li').click(function(e){
            if(!e.ctrlKey) {
                // Ctrl not pressed, clear previous selections
                 lis.removeClass("selected");      
            }
            $(this).addClass("selected");
            
            parentElementId = this.parentElement.getAttribute('id');
        
            if(parentElementId == 'available-instances'){
                ul = document.getElementById('available-instances');
                $(".selected-instances-btn").attr('disabled','disabled');
                $('#selected-instances .selected').removeClass('selected');
            }
            else{
                ul = document.getElementById('selected-instances');
                $(".available-instances-btn").attr('disabled','disabled');
                $('#available-instances .selected').removeClass('selected');
            }
            elements = ul.getElementsByClassName("selected");

            if(elements.length > 0){
                $(':button.'+parentElementId+'-btn').removeAttr('disabled');
            }
            else{
                $(':button.'+parentElementId+'-btn').attr('disabled');
            }
        });

        function addAllInstance(){
            showLoading();
            var selectedElements = ul.getElementsByClassName("selected");
            var selected = '';
            for (var i = 0, len = selectedElements.length; i < len; i++) {
                if(len-i == 1){
                    selected += selectedElements[i].getAttribute("id"); 
                }
                else{
                    selected += selectedElements[i].getAttribute("id")+','; 
                }
                if(parentElementId == 'available-instances'){
                    $('#'+selectedElements[i].getAttribute("id")).attr('ondragstart','dragStart(event,'+1+')');
                }
                else if(parentElementId == 'selected-instances'){
                    $('#'+selectedElements[i].getAttribute("id")).attr('ondragstart','dragStart(event,'+0+')');
                }
            }
            
            //$("input[id*='instanceValue']").val(selected);
            
            if(parentElementId == 'available-instances'){
                $('#'+parentElementId+' .selected').appendTo('#selected-instances');
                 addInstance(selected);
            }
            else if(parentElementId == 'selected-instances'){
                $('#'+parentElementId+' .selected').appendTo('#available-instances');
                removeInstance(selected);
            }
            sort();
            $('.selected').removeClass('selected');
            $(".selected-instances-btn").attr('disabled','disabled');
            $(".available-instances-btn").attr('disabled','disabled');
        }
        // multi select end
        
        //End Mel 11-10-15 Drag and Drop functionality
    </script>
    </html>
</apex:page>